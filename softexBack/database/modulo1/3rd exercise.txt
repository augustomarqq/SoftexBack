PROCESSO DE NORMALIZAÇÃO DO BANCO DE DADOS:

    Normalização é o processo de organização de dados em um banco de dados. Isso inclui a criação de tabelas
    e o estabelecimento de relações entre essas tabelas de acordo com as regras projetadas para proteger os
    dados e tornar o banco de dados mais flexível, eliminando a redundância e a dependência inconsistente.

    Dados redundantes desperdiçam espaço em disco e criam problemas de manutenção. Se os dados existentes em
    mais de um local devem ser alterados, eles devem ser alterados exatamente da mesma maneira em todos os
    locais. Uma alteração de endereço do cliente é muito mais fácil de implementar se esses dados são
    armazenados apenas na tabela Clientes e em nenhum outro lugar no banco de dados.

    Há algumas regras para normalização do banco de dados. Cada regra é chamada de "forma normal". Se a
    primeira regra for observada, o banco de dados será considerado como "primeiro forma normal". Se as
    três primeiras regras forem observadas, o banco de dados será considerado como "terceira forma normal".
    Embora outros níveis de normalização sejam possíveis, a terceira forma normal é considerada o nível
    mais alto necessário para a maioria dos aplicativos.


PRIMEIRA FORMA NORMAL:

    - Possui chave primária;
    - Não possui grupos repetitivos;
    - Todos os seus atributos são atômicos, ou seja, não precisa ser decomposto.

    Para chegar a primeira forma normal devemos: Determinar o atributo que possui característica de chave primária,
    tornar todos atributos atômicos, transformar o grupo repetitivo em uma nova tabela, levando a chave primária da
    tabela na qual estava, para manter a ligação entre a tabela criada e a original. Depois aplicamos também sobre
    essa nova tabela a primeira forma normal.

    Exemplo:
        Tabela (cod_cliente, nome_cliente, tel1, tel2, endereco, cod_produto, nome_produto, preco, quantidade) ✗
        Cliente (cod_cliente, nome_cliente, tel1, tel2, rua, bairro, cidade, estado) ✓
        Produto (cod_cliente, cod_produto, nome_produto, preco, quantidade) ✓


SEGUNDA FORMA NORMAL:

    - Está na primeira forma normal;
    - Não possui dependências parciais da chave primária.

    Para chegar a segunda forma normal verifique se a chave primária dessa tabela é composta ou simples. Se for simples,
    já se encontra na segunda forma normal. Se for composta, verifique se todos os atributos da relação dependem de todos
    os atributos que compõem a chave primária. Por exemplo, se a chave primária é composta dos atributos A , B e o campo C
    em questão depende somente de B. Se sim, já está na segunda forma normal. Se não, pegue o atributo (C) que depende
    parcialmente da chave primária e crie uma nova tabela. Essa tabela terá como chave primária o campo da chave primária
    original que determinou o campo C (nesse exemplo é o B) e adicione como atributo simples da relação o C. Veja o exemplo
    abaixo: (Obs: ➙ significa “determina”, ou seja, define, indica, aponta)

    Exemplo:
        Cliente (cod_cliente, nome_cliente, tel1, tel2, rua, bairro, cidade, estado) ✓ (não possui chave primária composta)
        
        Produto (cod_cliente, cod_produto, nome_produto, preco, quantidade) ✗
        
        cod_produto ➙ nome_produto, preco (dependência parcial)
        cod_cliente, cod_produto ➙ quantidade (dependência total)
        
        Resp: Produto (cod_produto, nome_produto, preco) ✓
        Resp: Compra (cod_cliente, cod_produto, quantidade) ✓


TERCEIRA FORMA NORMAL:

    - Está na segunda forma normal;
    - Se nenhum dos campos foram determinados transitivamente pela chave primária.

    Para chegar a terceira forma normal verifique os campos que não são chave primária. Se algum desses campos não chave possuir
    dependência com outro campo não chave, então essa tabela não se encontra na terceira forma normal.

    Exemplo:
        Carro (placa, modelo, km_rodados, cod_fabricante, nome_fabricante) ✗

        Placa, modelo ➙ km_rodados
        Placa, modelo ➙cod_fabricante
        Placa, modelo ➙ nome_fabricante
        Cod_frabricante ➙ nome_fabricante

        Carro (placa, modelo, kmRodados, cod_fabricante) ✓
        Fabricante (cod_fabricante, nome_fabricante) ✓


OUTRAS FORMAS DE NORMALIZAÇÃO:

    A quarta forma normal, também chamada de FNBC (Forma Normal de Boyce-Codd), e a quinta forma normal existem, mas raramente são
    consideradas no design prático. Ignorar essas regras pode resultar em não mais que um design de banco de dados perfeito,
    mas não deve afetar a funcionalidade. Ou seja, para a maioria dos casos a terceira normalização já está suficiente.

    Toda relação FNBC está na 3FN. Ela é uma melhora da 3FN utilizada em casos onde a tabela apresenta mais de uma chave candidata.
    A FNBC serve para separar, em novas tabelas, valores que ainda estejam redundantes depois da 3FN, do seu banco de dados.


